<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: twitter | Blog kỹ thuật máy tính]]></title>
  <link href="http://git@github.com.github.com/blog/categories/twitter/atom.xml" rel="self"/>
  <link href="http://git@github.com.github.com/"/>
  <updated>2015-03-08T14:45:59+09:00</updated>
  <id>http://git@github.com.github.com/</id>
  <author>
    <name><![CDATA[kỹ thuật máy tính]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Đem sản phẩm đến với thế giới Hacker]]></title>
    <link href="http://git@github.com.github.com/blog/2015/01/08/foss/"/>
    <updated>2015-01-08T19:54:00+09:00</updated>
    <id>http://git@github.com.github.com/blog/2015/01/08/foss</id>
    <content type="html"><![CDATA[<p><em>Bài viết này là phần tiếp theo của bài viết <a href="http://ktmt.github.io/blog/2014/08/01/toi-da-xay-dung-1-phan-mem-ma-nguon-mo-nhu-the-nao/">Tôi đã xây dựng một phần mềm mã nguồn mở như thế nào</a>. Cách sử dụng từ “Hacker” là thống nhất với phần 1.</em></p>
<h1 id="vai-trò-của-cộng-đồng">Vai trò của cộng đồng</h1>
<p>“Đem sản phẩm đến với cộng đồng” luôn là phần khó đối với một người làm kỹ thuật.</p>
<p>Chúng ta có thể say mê, thức ngày thức đêm để viết lib, viết tool, hoàn thành đoạn code mà bản thân cảm thấy tâm đắc. Tuy nhiên mọi chuyện thường kết thúc ở đó. Thiếu quảng bá và truyền thông sẽ khiến sản phẩm chỉ loanh quanh ở mức bạn bè dùng thử rồi bạn bè cho ý kiến, sản phẩm làm ra chẳng bao giờ thực sự đến được với <em>cộng đồng</em>.</p>
<p>Xây dựng xong <a href="https://github.com/DTVD/rainbowstream">Rainbow Stream</a>. Tôi đã bắt đầu đi học hỏi và tìm cách quảng bá, giới thiệu. Bỏ bên lề những vấn đề kỹ thuật đã trình bày trong phần 1, phần 2 này sẽ tập trung nói về quá trình quảng bá và giới thiệu đó.</p>
<h1 id="kênh-quảng-bá">Kênh quảng bá</h1>
<p>Người dùng của sản phẩm mã nguồn mở được xác định sẽ là chính những hacker như bản thân tác giả. Bước đầu tiên tôi đã thực hiện là tìm hiểu xem cộng đồng hacker trên thế giới đang đọc gì ? ở đâu ? Bản danh sách tóm tắt dưới đây sẽ đưa ra những câu trả lời theo thứ tự.</p>
<ul>
<li><a href="https://news.ycombinator.com/">Hacker News</a> là nơi tập trung nhiều view nhất. Lên được front page của <a href="https://news.ycombinator.com/">Hacker News</a> là ước mơ của mọi dự án mã nguồn mở, và featured trên front page là cột mốc đáng nhớ đối với mọi hacker. Thuật toán ranking của <a href="https://news.ycombinator.com/">Hacker News</a> đã được đề cập trong <a href="http://ktmt.github.io/blog/2013/08/06/a-little-bit-about-news-ranking/">một bài biết khác</a> của blog KTMT, có đặc điểm là sẽ đào thải những item cũ rất nhanh dù upvote có nhiều thế nào đi nữa.</li>
<li><a href="http://www.reddit.com/">Reddit</a> là nguồn thông tin tiếp theo. Reddit có rất nhiều sub nhưng dành cho hacker thì chúng ta có <em>r/programmingp</em>, <em>r/coolgithubprojects</em>, v.v… Nếu giữ được upvote cao thì thời gian trên front page của Reddit sẽ dài hơn <a href="https://news.ycombinator.com/">Hacker News</a>. Tuy nhiên Reddit có rất nhiều downvoter (những user/bot chuyên đi downvote).</li>
<li><a href="https://github.com/trending">Github Trending</a> tổng hợp những project có lượng star tăng nhanh trong ngày, trong tuần và có thể chia theo ngôn ngữ. Nếu một ngày tăng khoảng 50 star thì ngay lập tức sẽ “lên trend”, kéo theo hàng loạt các newsletter đưa tin, bạn “tự nhiên” sẽ nổi tiếng :D</li>
<li><a href="http://twitter.com/">Twitter</a> của những blog/tạp chí/hacker nổi tiếng. Kênh này tỏ ra hiệu quả bát ngờ so với dự tính.</li>
<li>Các blog kỹ thuật - trang chủ của những tài khoản Twitter đề cập ở trên.</li>
</ul>
<h1 id="chuẩn-bị-trước-khi-bắt-đầu-chiến-dịch">Chuẩn bị trước khi bắt đầu chiến dịch</h1>
<p>Những kênh ở phần trước có thể đem lại cho bạn lượng view đầu vào rất lớn, nhưng để user <strong>nán lại và đọc hết</strong>, <strong>dùng thử</strong> sản phẩm và tốt hơn nữa là đi <strong>giới thiệu lại</strong> sản phẩm hộ bạn, bạn cần chuẩn bị thật tốt những chỉ mục sau đây</p>
<h2 id="một-cái-tên-tốt">Một cái tên tốt</h2>
<p>Một cái tên dễ nhớ, dễ đánh vần, và quan trọng hơn là <em>chưa thuộc về một sản phẩm khác</em> là điều đầu tiên cần thiết. Hãy dùng Chrome incognito mode để kiểm tra mọi ý tưởng.</p>
<h2 id="source-code-được-open-trên-github.">Source code được open trên Github.</h2>
<p>Hoặc Bitbucket hay Google Code. Tuy nhiên cộng đồng trên Github đang phát triển mạnh mẽ và nhanh chóng hơn cả. Host source code trên Github sẽ nhận được nhiều feedback và Pull Request.</p>
<h2 id="official-homepage">Official homepage</h2>
<p>Thực tế Github Project đã có thể làm official homepage. Tuy nhiên tôi vẫn mua thêm domain <a href="http://www.rainbowstream.org/">rainbowstream.org</a>, làm một cái Github Page, lấy một cái theme đẹp và trỏ vào domain làm homepage thứ 2. Tại sao ư ? 2 link homepage sẽ đem lại 2 cơ hội giới thiệu trên <a href="https://news.ycombinator.com/">Hacker News</a>. Theme đẹp cho một trang homepage đơn giản có thể tìm thấy ở <a href="http://html5up.net/">HTML5up</a>.</p>
<h2 id="readme.md">README.md</h2>
<p>README.md là cái đầu tiên đập vào mắt user khi họ đến homepage. Một file README tốt sẽ nói với user :</p>
<ul>
<li>Project của bạn <strong>tạo nên cái gì</strong> và <strong>tại sao</strong> user cần dùng nó.</li>
<li>Hướng dẫn cài dặt.</li>
<li>Hướng dẫn sử dụng.</li>
<li>Đường dẫn đến full document. Document cần phải làm riêng trên một file khác hoặc một dịch vụ khác.</li>
<li>License. License là một điểm rất quan trọng trong cộng đồng mã nguồn mở. Rất tiết bài viết này không có điều kiện trình bày cụ thể về các loại license. Ở đây <a href="https://github.com/DTVD/rainbowstream">Rainbow Stream</a> dùng MIT license.</li>
<li>Nơi user có thể nhận được sự giúp đỡ của bạn (đặt câu hỏi, yêu cầu tính năng hay báo cáo bug).</li>
<li>Cách user có thể đóng góp cho project.</li>
<li>Ảnh minh hoạ. Đối với các sản phẩm về UI, ảnh minh hoạ sẽ gây ấn tượng mạnh nhất về thị giác. Tôi thậm chí đã dùng <a href="https://github.com/icholy/ttygif">ttygif</a> tạo ảnh gif để cho ấn tượng mạnh hơn nữa :D</li>
</ul>
<h2 id="viết-ut-cho-project">Viết UT cho project</h2>
<p>Chưa cần nói đến chất lượng sản phẩm, source code được viết test sẽ có độ tin tưởng khác hẳn với những source code không có. Đặc biệt nếu project của bạn là một library với mục đích được dùng lại, không có testcase là đồng nghĩa với không có người dùng.</p>
<h2 id="một-tài-khoản-twitter">Một tài khoản Twitter</h2>
<p>Đối với cộng đồng hacker thì Twitter gần như trở thành định danh chính thức vậy. Twitter dùng để giao tiếp với user, phát đi thông báo nâng cấp hay tương tác với các tài khoản của người nổi tiếng.</p>
<h1 id="sử-dụng-các-kênh-quảng-bá">Sử dụng các kênh quảng bá</h1>
<h2 id="twitter-và-các-blog-kỹ-thuật">Twitter và các blog kỹ thuật</h2>
<p>Xác định được các tài khoản Twitter nổi tiếng là bước quan trọng đầu tiên. Bạn cần tìm ra keyword thể hiện được lĩnh vực mà sản phẩm của bạn đang hướng đến, lên <a href="https://followerwonk.com/bio/">FollowerWork</a> và tìm kiếm account của các blogger xếp theo số lượng follower. Tìm được profile rồi, hãy google ra homepage của họ (hoặc của trang tin kỹ thuật), mở phần contact để lấy email. Bước tiếp theo là soạn một email để nhờ họ giới thiệu về sản phẩm của bạn. Hãy nhớ, nội dung phải lịch sự và nhã nhặn, tóm gọn được sơ lược về sản phẩm và có <em>đường link đến homepage</em>. Đừng tở ra ngại ngùng ở tư thế người đi nhờ. Bản thân các blogger cũng cần những sản phẩm hay để thu hút view cho trang web của chính họ.</p>
<p>Đến khi sản phẩm được nhắc đến trong 1 tweet hoặc được viết hẳn thành 1 bài trên trang tin thì bạn sẽ ngạc nhiên với độ lan truyền của nó :D</p>
<p><img src="/images/rs/Twitter.png"></p>
<h2 id="github-trending">Github Trending</h2>
<p>Nếu bạn dồn đủ số star tăng xấp xỉ 40~50 trong 1 ngày, Github sẽ liệt kê sản phẩm của bạn vào <a href="https://github.com/trending">Trending list</a>, là nơi rất nhiều các newsletter nhìn vào để gửi mail cho user của họ. Python Weekly sẽ nhìn Python Github Trending, Ruby Weekly sẽ nhìn Ruby Github Trending. Tương tự đối với IOS hay Android.</p>
<p>Tôi không biết chính xác tên của các newsletter nhiều người đọc nhất, nhưng biết chắc chắn tất cả đều lấy trên trang trending của Github. Hãy cố gắng giữ được độ tăng đều trong thời gian càng lâu, độ phủ sóng của sản phẩm lên các newsletter sẽ càng lớn.</p>
<h2 id="reddit">Reddit</h2>
<p>Giới thiệu sản phẩm mã nguồn mở trên <a href="http://www.reddit.com/">Reddit</a> là cách dễ dàng ở mức tiếp theo. <a href="http://www.reddit.com/">Reddit</a> được chia thành rất nhiều các subreddit(kênh nhỏ) về các chủ đề cụ thể khác nhau. Bạn cần tìm kênh đông thành viên và liên quan đến chủ đề của sản phẩm. Sau đây là danh sách các subreddit tôi đã thử với <a href="https://github.com/DTVD/rainbowstream">Rainbow Stream</a></p>
<ul>
<li><a href="http://www.reddit.com/r/programming/">r/programming</a></li>
<li><a href="http://www.reddit.com/r/coolgithubprojects/">r/coolgithubprojects</a></li>
<li><a href="http://www.reddit.com/r/Python/">r/Python</a></li>
<li><a href="http://www.reddit.com/r/commandline/">r/commandline</a></li>
<li><a href="http://www.reddit.com/r/linux/">r/linux</a></li>
<li><a href="http://www.reddit.com/r/unixporn/">r/unixporn</a></li>
</ul>
<p>Muốn tin đăng trông bắt mắt và gây ấn tượng với người đọc, bạn nên post kèm 1 ảnh được up thông qua <a href="http://imgur.com/">Imgur</a>. Một tin được tỉ lệ upvote cao (&gt;70%) có thể ở nguyên trên frontpage của subreddit khoảng vài ngày.</p>
<p><img src="/images/rs/Reddit.png"></p>
<h2 id="hacker-news">Hacker News</h2>
<p>Chúng ta sẽ nói về phần khó nhất. Đã có vô số bài nghiên cứu về traffic của <a href="https://news.ycombinator.com/">Hacker News</a>, thời gian nào up lên là tốt nhất, chiến thuật lên front, bám front (lên được trang chủ và trụ lại trang chủ) trong thời gian dài. Bất kỳ ai cũng có thể post link lên <a href="https://news.ycombinator.com/">Hacker News</a>, tuy nhiên để post link có phần đầu là <em>[Show HN]</em> thì đòi hỏi phải có account đăng ký được một thời gian. Tôi đã lập account và đọc <a href="https://news.ycombinator.com/">Hacker News</a> trước khi làm <a href="https://github.com/DTVD/rainbowstream">Rainbow Stream</a>, nên may mắn có thể gửi link luôn khi hoàn thành sản phẩm.</p>
<p>Lên front được khoảng 20 tiếng đã đem lại 5000~6000 view và ít nhất 300+ star trên Github, rất ấn tượng phải không :) Sau đây là một vài lời khuyên nhỏ</p>
<ul>
<li>Tiêu đề đăng link cần thể hiện được <em>khả năng của sản phẩm</em> theo một <em>góc nhìn sáng tạo</em>. Hãy tham khảo <a href="https://news.ycombinator.com/show">Show HN page</a></li>
<li>Cần điểm nhấn về thị giác khi user click vào link điến trang chủ của bạn (Ảnh gif trên README.md hay trang Github Page ấn tượng)</li>
<li>Cần phâi post link vào 1 giờ chiều giờ Mỹ.</li>
<li>Cần vận động bạn bè khoảng 5~10 người upvote luôn trong 10 phút đầu tiên Hãy nhờ bảo bạn bè của bạn vào thẳng trang chủ của <a href="https://news.ycombinator.com/">Hacker News</a> để vote, không thông qua link gửi trực tiếp.</li>
</ul>
<p><img src="/images/rs/HN.png"></p>
<h2 id="tổng-kết">Tổng kết</h2>
<p>Bài viết này đã tổng kết các kinh nghiệm quảng bá của một sản phẩm mã nguồn mở đối với cộng đồng hacker trên thế giới. Mặc dù chúng ta có thể áp dụng rất nhiều các mẹo vặt, hướng dẫn để tăng view cho sản phẩm, nhưng bạn hãy nhớ, điều cốt yếu nhất vẫn là chất lượng sản phẩm của bạn.</p>
<p>Chất lượng bao gồm cả chất lượng trong quá trình làm ra và chất lượng support trong cả thời gian phát triển. Hãy cố gắng fix hết bug, trả lời mọi câu hỏi và review mọi Pull Request một cách cẩn thận. Bạn sẽ nhận lại không chỉ sự tôn trọng trong giới hacker mà cả những cơ hội từ trước đến nay chưa bao giờ nghĩ tới. Happy hacking!</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tôi đã xây dựng một phần mềm mã nguồn mở như thế nào]]></title>
    <link href="http://git@github.com.github.com/blog/2014/08/01/toi-da-xay-dung-1-phan-mem-ma-nguon-mo-nhu-the-nao/"/>
    <updated>2014-08-01T20:00:00+09:00</updated>
    <id>http://git@github.com.github.com/blog/2014/08/01/toi-da-xay-dung-1-phan-mem-ma-nguon-mo-nhu-the-nao</id>
    <content type="html"><![CDATA[<p><em>Lưu ý trước khi đọc tiếp: Ở bài viết này tác giả dùng chữ “hacker”, không phải theo nghĩa chỉ những người làm trong lĩnh vực bảo mật hay an toàn thông tin. “Hacker” ở đây là những kỹ sư, những nhà phát triền có năng lực tự tìm hiểu, mày mò, có kỹ năng “bắt máy tính phục vụ sở thích của mình”.</em></p>
<h1 id="ý-tưởng">Ý tưởng</h1>
<p>Nếu bạn là một hacker làm việc nhiều với Mac hoặc Linux, chắc các bạn chẳng xa lạ gì với terminal - giao diện dòng lệnh cơ bản nhất của hệ điều hành Unix. Tôi là một hacker bị “cuồng terminal”, <code>zsh</code>, <code>prezto</code>, <code>tmux</code>, <code>irssi</code>, <code>vim</code>, <code>tig</code> là những tools ưa thích nhất. Tôi từng có ước mơ muốn từ bỏ các giao diện đồ hoạ, có thể lập trình, chat chit, nghe nhạc v.v.. ngay trên môi trường không-đồ-hoạ.</p>
<p>Bên cạnh đó, mặc dù không mấy mặn mà với Facebook nhưng gần đây lại bị nghiện Twitter, trong đầu tôi luôn hiện lên câu hỏi: làm thế nào để cũng có thể tương tác với Twitter chỉ qua terminal của MacOSX ?</p>
<p>Trên thực tế đã có khá nhiều thư viện mã nguồn mở có thể đáp ứng được nhu cầu trên. <a href="https://github.com/sferik/t">t</a> hay <a href="https://github.com/jugyo/earthquake">earthquake</a> là những gem(Ruby) được viết rất bài bản và đa tính năng. Tuy nhiên tôi đã quyết định tự viết một phần mềm của riêng mình, bởi tự phát triền và làm sản phẩm của mình được cộng đồng đón nhận là một mục tiêu mới mẻ và đầy thử thách.</p>
<p>Trong bài viết này, tôi sẽ giới thiệu với các bạn tôi đã xây dựng một phần mềm mã nguồn mở như thế nào, về cả kỹ năng phát triển và cách mang phần mềm của mình đến với cộng đồng hacker trên thế giới.</p>
<h1 id="xác-định-mục-tiêu">Xác định mục tiêu</h1>
<p>Khi bạn bắt đầu viết một phần mềm mã nguồn mở, điều quan trọng đầu tiên sẽ là : <strong>đã có ai thực hiện ý tưởng của bạn chưa</strong> và họ <strong>đã thực hiện được tốt đến đâu</strong>. Khi chuẩn bị viết phần mềm của mình, tôi nhận thấy <a href="https://github.com/sferik/t">t</a> giống như <em>1 twitter command trên Unix</em>, focus vào khả năng pipe với các command khác. Ngược lại, <a href="https://github.com/jugyo/earthquake">earthquake</a> là 1 app hoàn chỉnh nhưng <em>xử lý hiển thị tweets lại chưa thật tốt</em>.</p>
<p>Và từ đó <a href="https://github.com/DTVD/rainbowstream">Rainbow Stream</a> ra đời. Bạn có thể nhận ra 2 điểm nêu trên khi nhìn vào cách thức hoạt động của app dưới đây:</p>
<figure>
<img src="https://raw.githubusercontent.com/DTVD/rainbowstream/master/screenshot/rs.gif" />
</figure>
<h1 id="tạo-nên-sự-khác-biệt">Tạo nên sự khác biệt</h1>
<p>Để gây được ấn tượng với người dùng, sản phẩm của bạn vẫn cần có 1 đến 2 tính năng nổi trội. Bạn sẽ không muốn phần mềm mình viết ra mãi chỉ là “alternative to xxx or yyy, can consider if zzz stops development”. Ở đây, tôi xây đựng <a href="https://github.com/DTVD/rainbowstream">Rainbow Stream</a> tập trung vào 2 tính năng chính:</p>
<ul>
<li>Khả năng hiển thị màu sắc trên các terminal hỗ trợ 256 màu, cung cấp sẵn 1 số themes nổi tiếng.</li>
<li>Hiện thị ảnh <em>trực tiếp trên terminal</em>.</li>
</ul>
<p>Chúng ta sẽ đi vào cụ thể trong các phần tiếp theo.</p>
<h1 id="hiển-thị-màu-của-terminal">Hiển thị màu của terminal</h1>
<p>Hầu hết các terminal hiện đại đều hỗ trợ hiển thị <em>256 ANSI colors</em>. Trên shell bạn có thể dễ dàng in ra chữ theo các màu định sẵn bẳng các dùng <em>Escape character</em> như dưới đây</p>
<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>color - color.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'> <span class="nv">$ </span><span class="nb">echo</span> -e “<span class="o">[</span>31mRed” <span class="nv">$ </span><span class="nb">echo</span> -e “<span class="o">[</span>32mGreen” <span class="nv">$ </span><span class="nb">echo</span> -e “<span class="o">[</span>33mYellow” <span class="nv">$ </span><span class="nb">echo</span> -e “<span class="o">[</span>34mBlue” <span class="nv">$ </span><span class="nb">echo</span> -e “<span class="o">[</span>35mMagenta” <span class="nv">$ </span><span class="nb">echo</span> -e “<span class="o">[</span>36mCyan” <span class="nv">$ </span><span class="nb">echo</span> -e “<span class="o">[</span>37mLight gray”
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
<p>Hiện thị màu trên Python có thể được viết gọn theo function như sau</p>
<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>color - color.py </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'> <span class="k">def</span> <span class="nf">basic_color</span><span class="p">(</span><span class="n">code</span><span class="p">):</span> <span class="err">“”</span><span class="o">&amp;</span><span class="n">quot</span><span class="p">;</span> <span class="mi">16</span> <span class="n">colors</span> <span class="n">supported</span> <span class="err">“”</span><span class="o">&amp;</span><span class="n">quot</span><span class="p">;</span> <span class="k">def</span> <span class="nf">inner</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="n">bold</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span> <span class="n">c</span> <span class="o">=</span> <span class="n">code</span> <span class="k">if</span> <span class="n">bold</span><span class="p">:</span> <span class="n">c</span> <span class="o">=</span> <span class="err">“</span><span class="mi">1</span><span class="p">;</span><span class="o">%</span><span class="n">s</span><span class="err">”</span> <span class="o">%</span> <span class="n">c</span> <span class="k">return</span> <span class="err">“</span><span class="mi">33</span><span class="p">[</span><span class="o">%</span><span class="n">sm</span><span class="o">%</span><span class="n">s33</span><span class="p">[</span><span class="mi">0</span><span class="n">m</span><span class="err">”</span> <span class="o">%</span> <span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span> <span class="k">return</span> <span class="n">inner</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">term_color</span><span class="p">(</span><span class="n">code</span><span class="p">):</span> <span class="err">“”</span><span class="o">&amp;</span><span class="n">quot</span><span class="p">;</span> <span class="mi">256</span> <span class="n">colors</span> <span class="n">supported</span> <span class="err">“”</span><span class="o">&amp;</span><span class="n">quot</span><span class="p">;</span> <span class="k">def</span> <span class="nf">inner</span><span class="p">(</span><span class="n">text</span><span class="p">):</span> <span class="n">c</span> <span class="o">=</span> <span class="n">code</span> <span class="k">return</span> <span class="err">“</span><span class="mi">33</span><span class="p">[</span><span class="mi">38</span><span class="p">;</span><span class="mi">5</span><span class="p">;</span><span class="o">%</span><span class="n">sm</span><span class="o">%</span><span class="n">s33</span><span class="p">[</span><span class="mi">0</span><span class="n">m</span><span class="err">”</span> <span class="o">%</span> <span class="p">(</span><span class="n">c</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span> <span class="k">return</span> <span class="n">inner</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
<p>Sử dụng những function ở trên thực tế rất đơn giản: gọi thẳng function với parameter là mã ANSI color, trả về là <em>một function khác</em> và lần này nhận parameter là string để đổi thành string có màu tương ứng.</p>
<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>color - color.py </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'> <span class="n">black</span> <span class="o">=</span> <span class="n">basic_color</span><span class="p">(</span><span class="err">‘</span><span class="mi">30</span><span class="err">’</span><span class="p">)</span> <span class="n">red</span> <span class="o">=</span> <span class="n">basic_color</span><span class="p">(</span><span class="err">‘</span><span class="mi">31</span><span class="err">’</span><span class="p">)</span> <span class="n">green</span> <span class="o">=</span> <span class="n">basic_color</span><span class="p">(</span><span class="err">‘</span><span class="mi">32</span><span class="err">’</span><span class="p">)</span> <span class="n">yellow</span> <span class="o">=</span> <span class="n">basic_color</span><span class="p">(</span><span class="err">‘</span><span class="mi">33</span><span class="err">’</span><span class="p">)</span> <span class="n">blue</span> <span class="o">=</span> <span class="n">basic_color</span><span class="p">(</span><span class="err">‘</span><span class="mi">34</span><span class="err">’</span><span class="p">)</span> <span class="n">magenta</span> <span class="o">=</span> <span class="n">basic_color</span><span class="p">(</span><span class="err">‘</span><span class="mi">35</span><span class="err">’</span><span class="p">)</span> <span class="n">cyan</span> <span class="o">=</span> <span class="n">basic_color</span><span class="p">(</span><span class="err">‘</span><span class="mi">36</span><span class="err">’</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">print</span> <span class="n">green</span><span class="p">(</span><span class="err">“</span><span class="n">Green</span> <span class="n">text</span><span class="err">”</span><span class="p">)</span> <span class="k">print</span> <span class="n">term_color</span><span class="p">(</span><span class="err">‘</span><span class="mi">112</span><span class="err">’</span><span class="p">)(</span><span class="err">“</span><span class="n">A</span> <span class="n">text</span> <span class="k">with</span> <span class="n">ANSI</span> <span class="n">color</span> <span class="mi">112</span><span class="err">”</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
<p>Giả sử chúng ta có một tập vô hạn các word không biết trước. muốn mỗi word có một màu và các word lặp lại sẽ có màu giống nhau, chúng ta có thể dùng <em>Memoization</em> trong Python như sau:</p>
<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>color - color.py </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'> <span class="kn">import</span> <span class="nn">itertools</span> <span class="nn">from</span> <span class="nn">functools</span> <span class="nn">import</span> <span class="nn">wraps</span> <span class="nn">cyc</span> <span class="o">=</span> <span class="n">itertools</span><span class="o">.</span><span class="n">cycle</span><span class="p">([</span><span class="n">black</span><span class="p">,</span><span class="n">red</span><span class="p">,</span><span class="n">green</span><span class="p">,</span><span class="n">yellow</span><span class="p">,</span><span class="n">blue</span><span class="p">,</span><span class="n">magenta</span><span class="p">,</span><span class="n">cyan</span><span class="p">])</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">Memoize</span><span class="p">(</span><span class="n">func</span><span class="p">):</span> <span class="n">cache</span> <span class="o">=</span> <span class="p">{}</span> <span class="o">&lt;</span><span class="n">span</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;citation&quot;</span> <span class="n">data</span><span class="o">-</span><span class="n">cites</span><span class="o">=</span><span class="s">&quot;wraps&quot;</span><span class="o">&gt;</span><span class="nd">@wraps</span><span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span><span class="p">(</span><span class="n">func</span><span class="p">)</span> <span class="k">def</span> <span class="nf">wrapper</span><span class="p">(</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="n">args</span><span class="p">):</span> <span class="k">if</span> <span class="n">args</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">cache</span><span class="p">:</span> <span class="n">cache</span><span class="p">[</span><span class="n">args</span><span class="p">]</span> <span class="o">=</span> <span class="n">func</span><span class="p">(</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="n">args</span><span class="p">)</span> <span class="k">return</span> <span class="n">cache</span><span class="p">[</span><span class="n">args</span><span class="p">]</span> <span class="k">return</span> <span class="n">wrapper</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;&lt;</span><span class="n">span</span> <span class="n">class</span><span class="o">=</span><span class="s">&quot;citation&quot;</span> <span class="n">data</span><span class="o">-</span><span class="n">cites</span><span class="o">=</span><span class="s">&quot;Memoize&quot;</span><span class="o">&gt;</span><span class="nd">@Memoize</span><span class="o">&lt;/</span><span class="n">span</span><span class="o">&gt;</span> <span class="k">def</span> <span class="nf">cycle_color</span><span class="p">(</span><span class="n">s</span><span class="p">):</span> <span class="k">return</span> <span class="nb">next</span><span class="p">(</span><span class="n">cyc</span><span class="p">)(</span><span class="n">s</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="p">[</span><span class="err">“</span><span class="n">w1</span><span class="err">”</span><span class="p">,</span><span class="err">“</span><span class="n">w2</span><span class="err">”</span><span class="p">,</span><span class="err">“</span><span class="n">w3</span><span class="err">”</span><span class="p">,</span><span class="err">“</span><span class="n">w1</span><span class="err">”</span><span class="p">,</span><span class="err">“</span><span class="n">w4</span><span class="err">”</span><span class="p">]:</span> <span class="k">print</span> <span class="n">cycle_color</span><span class="p">(</span><span class="n">s</span><span class="p">)</span> <span class="c"># Now every word will has its own color, while the 1st “w1” and 2nd “w1” ends up with same color </span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
<p>Các màu sắc hiển thị trong <a href="https://github.com/DTVD/rainbowstream">Rainbow Stream</a> đều dựa theo nguyên lý nói trên.</p>
<h1 id="hiển-thị-ảnh-trên-terminal">Hiển thị ảnh trên terminal</h1>
<p>Để nói cụ thể về phần này sẽ hơi dài dòng, nhưng có thể tóm gọn trong các ý sau đây:</p>
<ul>
<li>Python có một thư viện xử lý ảnh rất tốt là <code>Pillow</code>. <code>Pillow</code> cung cấp những tính năng cơ bản để thao tác với lượng thông tin trong một tấm ảnh. Nhược điểm của Pillow là khá buggy khi install và không hỗ trợ Window.</li>
<li>Tôi dùng <code>Pillow</code> để đọc thông tin về từng Pixel trong một ảnh, mỗi pixel sẽ có 4 chỉ số gồm 3 chỉ số màu (R,G,B) và 1 chỉ số về độ trong (A).</li>
<li>Màu sắc của 1 pixel nói trên được quy đổi về tập 256 màu ANSI hiển thị được trên terminal (phương pháp xem ở dưới).</li>
<li>Với mỗi pixel, tôi in ra như 1 ký tự Space với màu ANSI tương ứng, sử dụng hàm <code>term_color</code> ở đoạn trên.</li>
</ul>
<p>Trong các bước trên thì bước quy đổi màu là quan trọng nhất. Thuật toán quy đổi dùng ở đây là phương pháp tính khoảng cách vector trong không gian Euclide 3 chiều:</p>
<ul>
<li>Mỗi màu RGB coi như 1 vector với 3 chiều là R (Red), G (Green), B (Blue).</li>
<li>Mỗi màu ANSI (trong tập 256 màu của terminal) cũng tương ứng với 1 vector 3 chiều. Chúng ta có tập tiêu chuẩn 256 vector ở đây.</li>
<li>Mỗi vector RGB của 1 pixel sẽ được quy về vector tiêu chuẩn ANSI <em>gần nhất</em>. Công thức tính khoảng cách giữa 2 đầu vector như trong hình học 3 chiều : <code>((x1-x2)**2 + (y1-y2)**2 + (z1-z2)**2)**0.5</code></li>
</ul>
<p>Như vậy “ảnh” ở trên terminal thực chất là các ký tự Space với màu ANSI đã được quy đổi và in ra liên tiếp :)</p>
<h1 id="các-vấn-đề-kỹ-thuật-khác">Các vấn đề kỹ thuật khác</h1>
<p>Để hoàn thiện <a href="https://github.com/DTVD/rainbowstream">Rainbow Stream</a> thực ra cần một số kỹ năng khác như lập trình với thread, tạo interactive input bẳng readline, gọi chương trình C compile sẵn hay xử lý chung cho cả Python 2 và Python 3… Trong khuôn khổ một bài viết tôi khó có thể trình bày hết những vấn đề trên, vì vậy nếu bạn quan tâm hãy mở thẳng <a href="https://github.com/DTVD/rainbowstream">Github repo</a> và đọc source code. <a href="https://github.com/DTVD/rainbowstream">Rainbow Stream</a> là một phần mềm mã nguồn mở với MIT license.</p>
<p><em>(… còn tiếp - Làm thế nào để mang phần mềm của mình đến với thế giới hacker …)</em></p>]]></content>
  </entry>
  
</feed>
