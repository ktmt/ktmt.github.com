<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tips | Blog kỹ thuật máy tính]]></title>
  <link href="http://ktmt.github.com/blog/categories/tips/atom.xml" rel="self"/>
  <link href="http://ktmt.github.com/"/>
  <updated>2013-05-19T19:44:14+09:00</updated>
  <id>http://ktmt.github.com/</id>
  <author>
    <name><![CDATA[kỹ thuật máy tính]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sử dụng ssl trên rubyonrails]]></title>
    <link href="http://ktmt.github.com/blog/2013/05/15/su-dung-ssl-voi-rails-va-mot-so-chu-y/"/>
    <updated>2013-05-15T23:03:00+09:00</updated>
    <id>http://ktmt.github.com/blog/2013/05/15/su-dung-ssl-voi-rails-va-mot-so-chu-y</id>
    <content type="html"><![CDATA[<h1>HTTPS trên rails</h1>

<p>Là RoR developer, khi phải làm việc với một số thông tin quan trọng như: thông tin cá nhân user, thông tin về thanh toán trực tuyến thì thường bạn phải dùng kết nối có bảo mật (secure connection), và điển hình ở đây là sử dụng HTTPS. Để setup HTTPS trên rails, thì trước hết mình phải nhắc lại là các web server phổ biến trên rails như là webrick, unicorn hay thin đều không hỗ trợ HTTPS từ đầu.  Để sử dụng SSL thì có 2 cách:</p>

<ol>
<li><p>Add thêm plugin: ví dụ như với webrick thì bạn sử dụng "webrick/https", nhưng cách này có một bất lợi là bạn phải setting từ đầu, và server đó sẽ luôn và chỉ phục vụ các request ssl:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>webrickssl.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">module</span> <span class="nn">Rails</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Server</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="o">::</span><span class="ss">Rack</span><span class="p">:</span><span class="ss">:Server</span>
</span><span class='line'> <span class="k">def</span> <span class="nf">default_options</span>
</span><span class='line'>   <span class="k">super</span><span class="o">.</span><span class="n">merge</span><span class="p">({</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt; :Port =&amp;gt; 3000,</span>
</span><span class='line'><span class="sr"> :environment =&amp;gt; (ENV[&#39;RAILS_ENV&#39;] || &quot;development&quot;).dup,</span>
</span><span class='line'><span class="sr"> :daemonize =&amp;gt; false,</span>
</span><span class='line'><span class="sr"> :debugger =&amp;gt; false,</span>
</span><span class='line'><span class="sr"> :pid =&amp;gt; File.expand_path(&quot;tmp/</span><span class="n">pids</span><span class="o">/</span><span class="n">server</span><span class="o">.</span><span class="n">pid</span><span class="s2">&quot;),</span>
</span><span class='line'><span class="s2"> :config =&amp;gt; File.expand_path(&quot;</span><span class="n">config</span><span class="o">.</span><span class="n">ru</span><span class="s2">&quot;),</span>
</span><span class='line'><span class="s2"> :SSLEnable =&amp;gt; true,</span>
</span><span class='line'><span class="s2"> :SSLVerifyClient =&amp;gt; OpenSSL::SSL::VERIFY_NONE,</span>
</span><span class='line'><span class="s2"> :SSLPrivateKey =&amp;gt; OpenSSL::PKey::RSA.new(</span>
</span><span class='line'><span class="s2"> IO.read(File.expand_path(&quot;</span><span class="n">vendor</span><span class="o">/</span><span class="n">ssl</span><span class="o">/</span><span class="n">gs</span><span class="o">.</span><span class="n">key</span><span class="s2">&quot;))),</span>
</span><span class='line'><span class="s2"> :SSLCertificate =&amp;gt; OpenSSL::X509::Certificate.new(</span>
</span><span class='line'><span class="s2"> IO.read(File.expand_path(&quot;</span><span class="n">vendor</span><span class="o">/</span><span class="n">ssl</span><span class="o">/</span><span class="n">gs</span><span class="o">.</span><span class="n">crt</span><span class="s2">&quot;))),</span>
</span><span class='line'><span class="s2"> :SSLCertName =&amp;gt; [[&quot;</span><span class="no">CN</span><span class="s2">&quot;, WEBrick::Utils::getservername]]</span>
</span><span class='line'><span class="s2">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;   })</span>
</span><span class='line'><span class="s2"> end</span>
</span><span class='line'><span class="s2">end</span>
</span><span class='line'><span class="s2">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
Để switch được giữa ssl và non-ssl thì thường bạn sẽ phải chạy song song 2 bản webrick, một bản hỗ trợ ssl và một bản không</p></li>
<li><p>Bạn sử dụng <strong>Nginx</strong> như một ssl proxy, sau khi xử lý ssl request thì Nginx sẽ forward lại request cho rails-server. Ở bài viết này mình sẽ nói về thiết lập môi trường ssl ở dưới môi trường development sử dụng <strong>Pow</strong> và <strong>Nginx</strong></p></li>
</ol>


<h1>Pow + Nginx</h1>

<p>Tại sao lại sử dụng Pow? Pow là một rails-server rất hay được sử dụng trong công đoạn <strong>development</strong>. Lý do vì: dễ cài đặt, không phải config, và pow cho mỗi webapp của chúng ta một cái domain đẹp đẽ trên local. Để cài đặt pow thì vô cùng đơn giản:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>install.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$curl</span> get.pow.cx | sh
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Pow không đi kèm một bộ tool dòng lệnh tốt lắm (command line tool), tuy nhiên rất may đã có người làm hộ chúng ta 1 cái gem tên là <strong>powder</strong>, có nó thì chúng ta sẽ sử dụng pow dễ dàng hơn:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>install.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$sudo</span> gem install powder
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Sau khi install xong powder, chúng ta đi đến folder chứa rails app và chỉ cần [powder link appname] là đã xong phần cài đặt
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>install.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">cd</span> ~/yourapp
</span><span class='line'><span class="nv">$powder</span> link app-name
</span></code></pre></td></tr></table></div></figure></notextile></div>
Sau khi làm thao tác này thì một symlink với tên là app-name sẽ được tạo ra ở trong thư mục <strong>~/.pow</strong>
Kết thúc thao tác này, powder đã tự động được khởi động, và chúng ta chỉ cần truy cập vào url [app-name.dev] là đã sử dụng được như bình thường :)</p>

<p>OK vậy là xong pow, giờ đến lượt nginx, để cài đặt nginx thì khá đơn giản trên mac, mình sử dụng brew:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>install.sh</span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>brew install nginx
</span></code></pre></td></tr></table></div></figure></notextile></div>
Thường thì nginx sau khi được cài đặt xong sẽ nằm ở :[/usr/local/etc/nginx]</p>

<p>Bạn đang muốn sử dụng HTTPS, nên công đoạn tiếp theo sẽ là setup để nginx nhận request HTTPS và forward lại cho pow. Đầu tiên là phải generate ra một cặp <strong>private key</strong> và <strong>certificate sign</strong>, tại sao lại cần cặp này thì các bạn có thể tự tìm hiểu về giao thức HTTPS.
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>install.sh</span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$openssl</span> req -new -nodes -keyout server.key -out server.csr
</span><span class='line'><span class="nv">$openssl</span> x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Sau khi có cặp key và sign, rồi bạn copy cặp đó vào thư mục [/usr/local/etc/nginx/ssl] cho dễ config. Tiếp đến bạn mở config của nginx ra và config lại như dưới đây
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>nginx </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>worker_processes  1;&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>events {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>  worker_connections  1024;
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>http {&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;pre>&lt;code>  include       mime.types;
</span><span class='line'>  default_type  application/octet-stream;
</span><span class='line'>
</span><span class='line'>  sendfile        on;
</span><span class='line'>  keepalive_timeout  65;
</span><span class='line'>
</span><span class='line'>  server {
</span><span class='line'>    ### server port and name ###
</span><span class='line'>    listen          443 ssl;
</span><span class='line'>    server_name     app-name.dev;
</span><span class='line'>
</span><span class='line'>    ### SSL log files ###
</span><span class='line'>    access_log      logs/ssl-access.log;
</span><span class='line'>    error_log       logs/ssl-error.log;
</span><span class='line'>
</span><span class='line'>    ### SSL cert files ###
</span><span class='line'>    ssl_certificate      ssl/app-name.crt;
</span><span class='line'>    ssl_certificate_key  ssl/app-name.key;
</span><span class='line'>    ### Add SSL specific settings here ###
</span><span class='line'>    keepalive_timeout    60;
</span><span class='line'>    ### We want full access to SSL via backend ###
</span><span class='line'>    location / {
</span><span class='line'>      proxy_pass  http://app-name.dev/;
</span><span class='line'>      ### force timeouts if one of backend is died ##
</span><span class='line'>      proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
</span><span class='line'>
</span><span class='line'>      ### Set headers ####
</span><span class='line'>      proxy_set_header Host $host;
</span><span class='line'>      proxy_set_header X-Real-IP $remote_addr;
</span><span class='line'>      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
</span><span class='line'>
</span><span class='line'>      ### Most PHP, Python, Rails, Java App can use this header ###
</span><span class='line'>      proxy_set_header X-Forwarded-Proto https;
</span><span class='line'>      ### By default we don't want to redirect it ####
</span><span class='line'>      proxy_redirect     off;
</span><span class='line'>    }
</span><span class='line'> }
</span><span class='line'>&lt;/code>&lt;/pre>
</span><span class='line'>
</span><span class='line'>&lt;p>}</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Công việc cuối cùng chỉ là chạy nginx, bạn khởi động nginx với option -t để test config file có đúng và không có warning nào không:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>runnginx.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>sudo nginx -t
</span><span class='line'>nginx: the configuration file /usr/local/etc/nginx/nginx.conf syntax is ok
</span><span class='line'>nginx: configuration file /usr/local/etc/nginx/nginx.conf <span class="nb">test </span>is successful
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Như vậy là mọi thứ đã OK, giờ chỉ việc dev thôi :D</p>

<p>Để switch một cách đơn giản nhất giữa HTTPS và HTTP thì mình tạo 2 hàm sau trong application_controller:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>switch.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">def</span> <span class="nf">redirect_to_https</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">protocol</span> <span class="o">==</span> <span class="s1">&#39;http://&#39;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;redirect_to action: action_name,</span>
</span><span class='line'><span class="sr">  params: request.query_parameters,</span>
</span><span class='line'><span class="sr">  protocol: &#39;https:/</span><span class="o">/</span><span class="s1">&#39;</span>
</span><span class='line'><span class="s1">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">&lt;p&gt;  end</span>
</span><span class='line'><span class="s1">end&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">&lt;p&gt;def redirect_to_http</span>
</span><span class='line'><span class="s1">  if request.protocol == &#39;</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="s1">&#39;&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s1">&lt;pre&gt;&lt;code&gt;redirect_to action: action_name,</span>
</span><span class='line'><span class="s1">  params: request.query_parameters,</span>
</span><span class='line'><span class="s1">  protocol: &#39;</span><span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="err">&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
Và với nhứng method nào cần sử dụng https thì mình chỉ cần gọi đến hàm redirect_to_https là ok :D.</p>

<p>Các bạn có thể thấy bộ đôi pow và nginx rất dễ sử dụng đúng không.
Gần đây mình có gặp phải một problem với bộ đôi này là mình sử dụng oauth2 để login với google account. Và google api <strong>không chấp nhận callback uri có domain có đuôi là .dev nhưng lại chấp nhận domain là localhost</strong>. Khi cài đặt powder thì default cái 127.0.0.1 sẽ không được trỏ đến app-name.dev của bạn, để làm việc này thì bạn chỉ cần vào ~/.pow, tạo một symlink với tên là <strong>default</strong> trỏ đến rails app của bạn là OK :D.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[error when install therubyracer]]></title>
    <link href="http://ktmt.github.com/blog/2013/05/03/error-when-install-therubyracer/"/>
    <updated>2013-05-03T06:43:00+09:00</updated>
    <id>http://ktmt.github.com/blog/2013/05/03/error-when-install-therubyracer</id>
    <content type="html"><![CDATA[<p>Là ruby dev chắc bạn biết đến gem therubyracer (là gem dùng làm javascript interpreter trên ruby thông qua v8, gem này thường dùng làm javascript headless test hay để sử dụng một số module của nodejs trên ruby)
Tuy nhiên khi cài đặt gem này trên mac os (kể cả từ 10.6 đến 10.8) thì rất hay bị gặp lỗi:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>error error.sh</span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem install therubyracer
</span><span class='line'>Building native extensions.  This could take a <span class="k">while</span>...
</span><span class='line'>ERROR:  Error installing therubyracer:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;ERROR: Failed to build gem native extension.
</span><span class='line'>
</span><span class='line'>    /Users/david/.rvm/rubies/ruby-1.9.3-p194/bin/ruby extconf.rb
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;checking <span class="k">for </span>main<span class="o">()</span> in -lobjc... yes
</span><span class='line'>&lt;strong&gt;&lt;em&gt; extconf.rb failed &lt;/em&gt;&lt;/strong&gt;
</span><span class='line'>Could not create Makefile due to some reason, probably lack of
</span><span class='line'>necessary libraries and/or headers.  Check the mkmf.log file <span class="k">for </span>more
</span><span class='line'>details.  You may need configuration options.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Provided configuration options:&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;--with-opt-dir
</span><span class='line'>--with-opt-include
</span><span class='line'>--without-opt-include<span class="o">=</span><span class="k">${</span><span class="nv">opt</span><span class="p">-dir</span><span class="k">}</span>/include
</span><span class='line'>--with-opt-lib
</span><span class='line'>--without-opt-lib<span class="o">=</span><span class="k">${</span><span class="nv">opt</span><span class="p">-dir</span><span class="k">}</span>/lib
</span><span class='line'>--with-make-prog
</span><span class='line'>--without-make-prog
</span><span class='line'>--srcdir<span class="o">=</span>.
</span><span class='line'>--curdir
</span><span class='line'>--ruby<span class="o">=</span>/Users/david/.rvm/rubies/ruby-1.9.3-p194/bin/ruby
</span><span class='line'>--with-objclib
</span><span class='line'>--without-objclib
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;extconf.rb:15:in &lt;code&gt;&amp;lt;main&amp;gt;<span class="s1">&#39;: undefined method&lt;/code&gt;include_path&#39;</span> <span class="k">for </span>Libv8:Module <span class="o">(</span>NoMethodError<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Bị lỗi này hình như là do version của v8 đang cài trong máy bị conflict với version v8 therubyracer reference đến, để fix thì có 2 cách:
Cách đầu tiên là uninstall bản gem libv8 đang có trong máy đi, rồi install lại therubyracer
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>fix1 fix1.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem uninstall libv8
</span><span class='line'><span class="nv">$ </span>gem install therubyracer
</span></code></pre></td></tr></table></div></figure></notextile></div>
Khi install therubyracer thì gem sẽ tự động install lại bản v8 thích hợp vào đúng chỗ.</p>

<p>Hoặc bạn có thể dùng cách thứ 2 là update lại bản libv8 mới nhất, rồi tiến hành cài đặt như bình thường
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>fix1 fix1.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gem update libv8
</span><span class='line'><span class="nv">$ </span>gem install therubyracer
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[blogging with github and octpress]]></title>
    <link href="http://ktmt.github.com/blog/2013/04/30/huong-dan-su-dung-octopress-cho-blog-tren-github/"/>
    <updated>2013-04-30T23:20:00+09:00</updated>
    <id>http://ktmt.github.com/blog/2013/04/30/huong-dan-su-dung-octopress-cho-blog-tren-github</id>
    <content type="html"><![CDATA[<h3>1. Tạo blog trên github</h3>

<p>Hẳn là một github user, hẳn bạn biết github hỗ trợ cho user tạo một static blog trên domain của github (xxx.github.io).
Để tạo blog cá nhân thì bạn có thể tham khảo chi tiết ở <a href="http://pages.github.com/">đây</a>. Hiện tại thì để tạo github page
thì đã có giao diện rất dễ sử dụng nên mình sẽ không nói thêm ở đây. Về mặt bản chất thì github page chỉ là một <strong>repo</strong>
trên github, trong đấy có chứa các static file, và được trỏ đến domain xxx.github.io.</p>

<h3>2. Jekyll và github page</h3>

<p>Khi bạn push bất kì thứ gì lên repo của github page, github sẽ chạy site generator sử dụng jekyll.
Tại sao phải sử dụng site generator? Vì github không chỉ hỗ trợ html mà còn hộ trợ markdown, một markup language khá đơn giản và dễ sử dụng (
bạn có thể tham khảo thêm ở [đây][http://en.wikipedia.org/wiki/Markdown]. Vậy bạn có thể đoán ra jekyll là gì: jekyll là
một sản phẩm của Tom Preston-Werner, ceo của github. Jekyll sẽ nhận input là một template directory, chạy qua một cái converter
engine để convert từ (Textile | Markdown | Liquid) sang html, tạo ra một static website.
Như vậy bạn đã có thể hình dung ra cách để tạo ra một github page:</p>

<p><img src="/images/OctopressGuide/octopress1.png"></p>

<h3>3. Sử dụng octopress để gen blog trên github page</h3>

<p>Octopress là một framework design cho jekyll. Gọi là framework nghe hơi lớn, nhưng nói một cách ngắn gọn, octopress là một bộ template/tools/
plugin giúp cho việc generate static site đơn giản hơn. Những tính năng chính của octopress bao gồm:</p>

<ul>
<li>Responsive design template (gồm css, js, html)</li>
<li>Build-in 3rd supports cho một số mạng xã hội (như like button của facebook, tweet button của twitter), và đặc biệt có comment của disqus khá tiện</li>
<li>Build-in web server để review sau khi generate qua jekyll</li>
<li>Hệ thống theming rất tốt với Compass và Sass</li>
</ul>


<p>Nói lý thuyết nhiều quá, giờ vào cụ thể về cách cài đặt và sử dụng:</p>

<p>Prerequisite: máy bạn phải install git và ruby, cách install các bạn có thể google :D
Sau đấy bạn clone octopress về máy, install bundler rồi install các dependencies như sau:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>install install.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'><span class="nb">cd </span>octopress
</span><span class='line'>gem install bundler
</span><span class='line'>bundle install
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Ok, như vậy bạn đã có một môi trường đẹp đẽ để chuẩn bị viết blog rồi. Về mặt trình tự thì để có 1 blog trên github page bạn sẽ phải:
Viết blog (dùng markdown/..) => generate qua jekyll => deploy lên github page</p>

<p><img src="/images/OctopressGuide/octopress2.png"></p>

<p>Octopress đã chuẩn bị sẵn cho bạn một Rakefile (bạn có thể tìm hiểu về rake ở [đây][http://rake.rubyforge.org/doc/rakefile_rdoc.html])
.Trong đấy có rất nhiều task octopress đã chuẩn bị sẵn cho bạn để giúp cho việc cài theme, deploy lên github page trở nên đơn giản
hơn bao giờ hết.</p>

<p>Đầu tiên bạn sử dụng<br/>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>theme theme.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake install
</span></code></pre></td></tr></table></div></figure></notextile></div>
để instal theme.</p>

<p>Sau khi đã install xong theme, chúng ta sẽ viết blog. Bước đầu tiên là setup repository để cho việc deploy lên github pages thuận tiện hơn:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>theme theme.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake setup_github_pages
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Khi làm bước này thì octopress sẽ prompt ra một cái để hỏi về repo của github pages của bạn (repo của cái xxx.github.io mà mình đã nói ở trên)</p>

<p><img src="/images/OctopressGuide/octopress3.png"></p>

<p>Như hướng dẫn đã ghi, bạn sẽ phải điền repo của bạn với format git@github:your_username/your_username.github.com
Ví dụ như trong trường hợp blog ktmt thì sẽ là git@github:ktmt/ktmt.github.com.git
Bạn điền vào, press OK, như vậy là đã xong bước setup.
Sau bước này thì thì octopress sẽ tạo ra một cái git repo trong octopress/<em>deploy/.git/ link đến git@github:ktmt/ktmt.github.com.git.
Như vậy bạn có thể hình dung là sau này khi deploy thì octopress sẽ gen ra file vào trong </em>deploy và git push lên git@github:ktmt/ktmt.github.com.git
.<br/>
Một chú ý nữa là sau bước này octopress sẽ:
*  Đổi tên remote branch hiện tại của bạn từ 'origin' sang 'octopress'
*  Add git@github:your_username/your_username.github.com vào remote branch và đổi thành 'origin'</p>

<p><img src="/images/OctopressGuide/octopress4.png"></p>

<p>Note là octopress branch của mình đang không phải là git://github.com/imathis/octopress.git như các bạn mà đang là https://github.com/ktmt/ktmtblog-octopress.git. Thực ra cái ktmtblog-octopress chỉ là một bản được fork về của octopress, và được tạo nên để giữ các bài viết trên github của bọn mình thôi.</p>

<p>Vậy là setup xong, tiếp theo là việc quan trọng nhất, viết blog.
Để viết blog thì đầu tiên bạn sẽ phải generate ra file markdown thông qua
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>theme theme.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake new_post<span class="o">[</span><span class="s2">&quot;post_title&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Kết quả là một file markdown đã được tạo ra ở thư mục <em>source/</em>post</p>

<p><img src="/images/OctopressGuide/octopress5.png"></p>

<p>Sau khi đã hoàn thành việc viết blog, việc tiếp theo bạn phải làm là generate cái file markdown đó + đống template thành static page thông qua jekyll. Octopress đã chuẩn bị sẵn cho bạn một rake task là generate, nên việc bạn phải làm chỉ là
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>theme theme.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake generate
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Kết quả là</p>

<p><img src="/images/OctopressGuide/octopress6.png"></p>

<p>Để preview thành quả của mình, octopress cung cấp cho bạn cả httpserver để preview, bạn gõ
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>theme theme.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake preview
</span></code></pre></td></tr></table></div></figure></notextile></div>
Và truy cập vào localhost:4000 thông qua browser là đã có thể preview thành quả của mình rồi.</p>

<p>Cuối cùng, bạn sẽ deploy lên github page thông qua
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>theme theme.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake deploy
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Và như thế là bạn đã deploy thành công blog của bạn lên github page (với điều kiện là bạn không viết sai syntax markdown :D).
Chú ý là khi bạn rake deploy thì octopress sẽ copy đè "toàn bộ" cái repo your_username/your_username.github.com của bạn thay bằng cái thư mục _deploy của nó, <strong>kể cả commit tree</strong>. Vậy nên để lưu giữ các bài viết của cá nhân thì các bạn nên làm như mình là: fork octopress về thành một repo cá nhân, và mỗi lần viết xong thì bạn push ngược lại vào <strong>octopress repo</strong> đó. Lưu ý là octopress repo nhé:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>theme theme.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>git push octopress master
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Cá nhân mình thì mình viết thêm 1 cái task vào Rakefile để cho đỡ bị nhầm lẫn repo:
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rake Rakefile.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">desc</span> <span class="s2">&quot;push to octopress also&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:push_octopress</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;pushing to octopress repo&quot;</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;git checkout master&quot;</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;git pull octopress master&quot;</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;git add .&quot;</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;git commit -m ¥&quot;</span><span class="no">Octopress</span> <span class="n">push</span> <span class="kp">new</span> <span class="n">post</span><span class="err">¥</span><span class="s2">&quot;&quot;</span>
</span><span class='line'>  <span class="nb">system</span> <span class="s2">&quot;git push octopress master&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Và như vậy sau mỗi lần deploy bạn chỉ cần
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>theme theme.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>rake push_octopress
</span></code></pre></td></tr></table></div></figure></notextile></div>
Là đã synchronize thành công.</p>

<h3>Kết luận:</h3>

<p>Như vậy sau lần đầu setting có vẻ loằng ngoằng, từ bây giờ khi muốn viet blog bạn chỉ cần:</p>

<p><img src="/images/OctopressGuide/octopress7.png"></p>

<p>Rất đơn giản đúng không :D. Happy blogging.</p>
]]></content>
  </entry>
  
</feed>
